%h3#handled-incidents
  %span
  - if @start_date == @end_date
    Acknowledgement and resolution times of alerts handled on
    = @start_date
  - else
    Acknowledgement and resolution times of alerts handled between
    = @start_date
    and
    = @end_date
  - if @search
    matching term
    = '"'+@search+'"'

%div{:id => 'chart'}
  %svg

%form{:action => '', :method => 'post', :role => 'form', :class => 'form', :id => 'ackresolution'}
  %h3
    Alert list (#{@acked} acknowledged out of #{@total} - #{@total == 0 ? 0 : @acked * 100 / @total}%)
  %table#incidents-table.table.table-hover.table-striped.table-bordered.table-condensed.tablesorter
    %thead
      %tr
        %th#alert_time.col-md-2
          Time of alert
        %th#alert_id.col-md-1
          ID
        %th#source.col-md-2.filter-select
          Source
        %th#entity.col-md-3
          Entity
        %th#check.col-md-2
          Check
        %th#ack_by.col-md-1
          Acknowledged by
        %th#ack.col-md-1
          Time to Ack
        %th#resolve.col-md-1
          Time to Resolve
    %tbody
      - @incidents.each do |incident|
        %tr
          %td= Time.at(incident['alert_time'])
          %td
            %a{:href => "#{@pagerduty_url}/incidents/#{incident['id']}"}= incident['id']
          %td= incident['input_type']
          %td
            %a{:href => "#{@pigeonhole_domain}/history/#{incident['entity']}/all"}= incident['entity']
          %td
            %a{:href => "#{@pigeonhole_domain}/history/all/#{incident['check']}"}=incident['check']
          %td= incident['acknowledge_by']
          %td= "#{incident['time_to_ack']} #{incident['time_to_ack_unit']}"
          %td= "#{incident['time_to_resolve']} #{incident['time_to_resolve_unit']}"

:javascript
:javascript
  var series = #{@series}
  nv.addGraph(function() {
    var chart = nv.models.cumulativeLineChart()
      .x(function(d) { return d[0] })
      //adjusting, 100% is 1.00, not 100 as it is in the data
      .y(function(d) { return d[1] })
      .color(d3.scale.category10().range())
      .useInteractiveGuideline(true)
      ;

    chart.xAxis
      .tickFormat(function(d) {
        return d3.time.format('%x')(new Date(d))
      });

    //chart.yAxis.tickFormat(d3.format(',.1%'));

    d3.select('#chart svg')
      .datum(series)
      .transition().duration(500)
      .call(chart)
      ;

    nv.utils.windowResize(chart.update);

    return chart;
  });
